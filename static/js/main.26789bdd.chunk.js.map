{"version":3,"sources":["types.js","reducers/index.js","components/App.js","actions/index.js","index.js"],"names":["ADD_REMINDER","CLEAR_REMINDER","DELETE_REMINDER","reminders","state","action","type","text","date","id","Math","random","filter","reminder","App","Date","this","props","className","map","moment","fromNow","onClick","clear_reminder","src","alt","value","placeholder","onChange","e","setState","target","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","add_reminder","render_reminders","delete_reminders","Component","connect","store","createStore","ReactDom","render","document","getElementById"],"mappings":"sMAAaA,EAAe,eACfC,EAAiB,iBACjBC,EAAkB,kB,gBC4BhBC,EA1BG,WAAuB,IAAtBC,EAAqB,uDAAf,GAAIC,EAAW,uCAChCF,EAAW,GAEf,OAAGE,EAAOC,OAASN,GACfG,EAAU,GAAD,mBAAMC,GAAN,CAAc,CAACG,KAAOF,EAAOE,KAAOC,KAAOH,EAAOG,KAAMC,GAAmB,GAAdC,KAAKC,YAEpER,GAEHE,EAAOC,OAASL,EACdE,EAAUS,QAAQ,SAAAC,GAAQ,OAAIA,EAASJ,KAAOJ,EAAOI,MAGtDJ,EAAOC,OAASJ,EACF,GAOZE,G,iDChBTU,E,4MACFV,MAAQ,CACJG,KAAO,GACPC,KAAO,IAAIO,M,sDAGf,WAAmB,IAAD,OACXZ,EAAaa,KAAKC,MAAlBd,UACP,OACI,oBAAIe,UAAU,aAAd,SAEIf,EAAUgB,KAAI,SAAAN,GACV,OACA,qBAAIK,UAAU,kDAAd,UACO,gCAAML,EAASN,KAAf,OACA,gCAAMa,IAAO,IAAIL,KAAKF,EAASL,OAAOa,UAAtC,OACA,qBAAKH,UAAU,kBAAkBI,QAAS,SAACb,GAAD,OAAM,EAAKQ,MAAMM,eAAeV,EAASJ,KAAnF,iBAH8DI,EAASJ,W,oBAW9F,WAAS,IAAD,OACJ,OACI,sBAAKS,UAAU,OAAf,UACI,qBAAKM,IAAI,GAAIC,IAAI,KACjB,qBAAKP,UAAU,iBAAf,SACI,yDAEJ,uBAAOZ,KAAK,OAAOoB,MAAOV,KAAKZ,MAAMG,KAAMoB,YAAY,uBAAuBT,UAAU,eAAeU,SAAU,SAACC,GAAD,OAAK,EAAKC,SAAS,CAACvB,KAAKsB,EAAEE,OAAOL,WACnJ,cAAC,IAAD,CACAM,SAAUhB,KAAKZ,MAAMI,KACrBkB,MAAOV,KAAKZ,MAAMI,KAClBU,UAAU,eACVU,SAAU,SAACpB,GAAQ,EAAKsB,SAAS,CAACtB,UAClCyB,gBAAc,EACdC,WAAW,QACXC,WAAW,qBACXC,YAAa,SAGZ,wBAAQlB,UAAU,4BAA4BI,QAAS,WAG/C,GAAuB,KAApB,EAAKlB,MAAMG,MAAmC,KAApB,EAAKH,MAAMI,KACrC,OAAO,EAGP,EAAKS,MAAMoB,aAAa,EAAKjC,MAAMG,KAAM,EAAKH,MAAMI,MACpD,EAAKsB,SAAS,CAAEvB,KAAO,GAAIC,KAAO,IAAIO,QARjD,0BAYAC,KAAKsB,mBACN,wBAAQpB,UAAU,2BAA2BI,QAAS,kBAAK,EAAKL,MAAMsB,oBAAtE,qC,GAxDMC,aA2EHC,eAAQ,SAACrC,GACpB,MAAO,CACHD,UAAYC,KAEjB,CAACiC,aCpFwB,SAAC9B,EAAOC,GAQ5B,MALc,CACVF,KAAMN,EACNO,OACAC,SD+ERe,eCzE0B,SAACd,GAM3B,MALgB,CACZH,KAAOL,EACPQ,ODuEJ8B,iBCjE4B,WAK5B,MAJgB,CACZjC,KAAOJ,KDyDAuC,CAMS3B,G,QE/ElB4B,G,cAAQC,YAAYxC,IAE1ByC,IAASC,OACT,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MACxBI,SAASC,eAAe,W","file":"static/js/main.26789bdd.chunk.js","sourcesContent":["export const ADD_REMINDER = \"ADD_REMINDER\"\r\nexport const CLEAR_REMINDER = \"CLEAR_REMINDER\"\r\nexport const DELETE_REMINDER = \"DELETE_REMINDER\"      ","import { ADD_REMINDER, CLEAR_REMINDER, DELETE_REMINDER } from \"../types\";\r\n\r\n\r\n\r\nconst reminders = (state=[], action) => {\r\n    let reminders =[];\r\n\r\n    if(action.type === ADD_REMINDER){\r\n        reminders= [...state , {text : action.text , date : action.date ,id : Math.random()*10}];\r\n       \r\n        return reminders; \r\n    }\r\n    else if(action.type === CLEAR_REMINDER ){\r\n       return reminders.filter( reminder => reminder.id !== action.id)\r\n\r\n    }\r\n    else if (action.type === DELETE_REMINDER){\r\n        return reminders = []\r\n    }\r\n    // else if (action.type === EMPTY_INPUT){\r\n    //     return reminders = [...state]\r\n\r\n    // }\r\n    else{\r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default reminders;","import {React ,Component } from \"react\";\r\nimport {add_reminder , clear_reminder , delete_reminders} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {reminders} from \"../reducers\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport moment from \"moment\"\r\n\r\nclass App extends Component{\r\n    state = {\r\n        text : \"\",\r\n        date : new Date()\r\n    }\r\n\r\n    render_reminders(){\r\n    const {reminders} = this.props\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {\r\n            reminders.map(reminder => {\r\n                return (\r\n                <li className=\"list-group-item d-flex justify-content-between \" key={reminder.id}> \r\n                       <div>{reminder.text} </div>   \r\n                       <div>{moment(new Date(reminder.date)).fromNow()} </div>   \r\n                       <div className=\"btn btn-danger \" onClick={(id)=>this.props.clear_reminder(reminder.id)}>x</div>\r\n                </li>\r\n                )\r\n            })\r\n            }\r\n        </ul>\r\n    )\r\n    }\r\nrender(){\r\n    return(\r\n        <div className=\"app \">\r\n            <img src=\"\"  alt=\"\"/>\r\n            <div className=\"reminder-title\">\r\n                <h2>What should You Do ? </h2>\r\n            </div>\r\n            <input type=\"text\" value={this.state.text} placeholder=\"Enter what you think\" className=\"form-control\" onChange={(e)=>this.setState({text:e.target.value})}></input>\r\n            <DatePicker\r\n            selected={this.state.date}\r\n            value={this.state.date} \r\n            className=\"form-control\" \r\n            onChange={(date)=>{this.setState({date})}}\r\n            showTimeSelect\r\n            timeFormat=\"HH:MM\"\r\n            dateFormat=\"dd,MM,yyyy  h:m aa\"\r\n            timeCaption =\"Time\" \r\n            \r\n            />\r\n             <button className=\" btn btn-primary d-block \" onClick={()=>\r\n                {\r\n                   \r\n                     if(this.state.text === \"\" || this.state.date === \"\"){\r\n                        return false\r\n                     }\r\n                     else{\r\n                        this.props.add_reminder(this.state.text, this.state.date)\r\n                        this.setState({ text : \"\", date : new Date() })\r\n                     }\r\n                }\r\n                }>Add Reminder</button>\r\n            {this.render_reminders()}\r\n            <button className=\" btn btn-danger d-block \" onClick={()=> this.props.delete_reminders()}>Delete Reminders</button>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n}\r\n//  function mapDispatchToProps (dispatch){\r\n//      return(\r\n\r\n//          add_reminders = ()=>dispatch(add_reminders())\r\n//      )\r\n// //  }\r\n// function mapStateToProps(state){\r\n//     return {\r\n//         reminders : state\r\n//     }\r\n// }\r\n\r\nexport default connect((state)=>{\r\n    return {\r\n        reminders : state\r\n    }\r\n}, {add_reminder,\r\n    clear_reminder ,\r\n    delete_reminders })(App);","import { ADD_REMINDER, CLEAR_REMINDER , DELETE_REMINDER } from \"../types\";\r\n\r\n\r\nexport const add_reminder = (text , date) => {\r\n    \r\n    \r\n      const   action ={\r\n            type: ADD_REMINDER,\r\n            text ,\r\n            date\r\n        }\r\n        return action\r\n\r\n}\r\n\r\nexport const clear_reminder = (id) =>{\r\n    const  action = {\r\n        type : CLEAR_REMINDER,\r\n        id\r\n    }\r\n\r\n    return action \r\n}\r\n\r\nexport const delete_reminders = () =>{\r\n    const  action = {\r\n        type : DELETE_REMINDER\r\n    }\r\n\r\n    return action \r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reminders from \"./reducers\";\r\nimport \"./index.css\"\r\n\r\n\r\nconst store = createStore(reminders);\r\n\r\nReactDom.render(\r\n<Provider store={store}><App></App></Provider>,\r\ndocument.getElementById(\"root\")\r\n\r\n)"],"sourceRoot":""}